# pylint: disable=no-self-use
import json

import pytest

from tap_nikabot import discover

SWAGGER_DEFINITION = '{"swagger":"2.0","info":{"description":"Hi there, welcome to nikabot public api :) Note: When testing please prefix <b>Bearer</b> before the token in the authorize pop-up","version":"Version v1","title":"Nikabot API ","termsOfService":"https://www.nikabot.com/tos","contact":{"name":"Nikabot","url":"https://www.nikabot.com","email":"nikabot@impossible.com"}},"host":"api.nikabot.com","basePath":"/","tags":[{"name":"Projects","description":"Team projects"},{"name":"Records","description":"Time records"},{"name":"Teams","description":"Teams"},{"name":"User Groups","description":"User groups"},{"name":"User roles","description":"User roles"},{"name":"Users","description":"Users"}],"paths":{"/api/v1/groups":{"get":{"tags":["User Groups"],"summary":"Get all user groups","operationId":"findByTeamIdUsingGET","produces":["*/*","application/json"],"parameters":[{"name":"limit","in":"query","description":"1-10000","required":true,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"0-until page end","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"originalRef":"ApiResponse«List«Group»»","$ref":"#/definitions/ApiResponse«List«Group»»"}},"600":{"description":"Error (Always status code 200)","schema":{"originalRef":"ApiErrorResponse","$ref":"#/definitions/ApiErrorResponse"}}},"security":[{"Bearer":["global"]}],"deprecated":false}},"/api/v1/groups/{id}":{"get":{"tags":["User Groups"],"summary":"Get a user group by id","operationId":"findByIdUsingGET","produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"originalRef":"ApiResponse«List«Group»»","$ref":"#/definitions/ApiResponse«List«Group»»"}},"600":{"description":"Error (Always status code 200)","schema":{"originalRef":"ApiErrorResponse","$ref":"#/definitions/ApiErrorResponse"}}},"security":[{"Bearer":["global"]}],"deprecated":false}},"/api/v1/projects":{"get":{"tags":["Projects"],"summary":"Get all projects","operationId":"findByTeamIdUsingGET_1","produces":["*/*","application/json"],"parameters":[{"name":"limit","in":"query","description":"1-10000","required":true,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"0-until page end","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"originalRef":"ApiResponse«List«ProjectDTO»»","$ref":"#/definitions/ApiResponse«List«ProjectDTO»»"}},"600":{"description":"Error (Always status code 200)","schema":{"originalRef":"ApiErrorResponse","$ref":"#/definitions/ApiErrorResponse"}}},"security":[{"Bearer":["global"]}],"deprecated":false}},"/api/v1/projects/{id}":{"get":{"tags":["Projects"],"summary":"Get a project by id","operationId":"findByIdUsingGET_1","produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"originalRef":"ApiResponse«List«ProjectDTO»»","$ref":"#/definitions/ApiResponse«List«ProjectDTO»»"}},"600":{"description":"Error (Always status code 200)","schema":{"originalRef":"ApiErrorResponse","$ref":"#/definitions/ApiErrorResponse"}}},"security":[{"Bearer":["global"]}],"deprecated":false}},"/api/v1/records":{"get":{"tags":["Records"],"summary":"Get all time records","operationId":"findByFilterUsingGET","produces":["*/*","application/json"],"parameters":[{"name":"dateEnd","in":"query","description":"format: yyyyMMdd","required":true,"type":"string","format":"date"},{"name":"dateStart","in":"query","description":"format: yyyyMMdd","required":true,"type":"string","format":"date"},{"name":"limit","in":"query","description":"1-10000","required":true,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"0-until page end","required":true,"type":"integer","format":"int32"},{"name":"projectId","in":"query","description":"Choices: user.user_id or project.id or both or none","required":false,"type":"string"},{"name":"userId","in":"query","description":"Choices: user.user_id or project.id or both or none","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"originalRef":"ApiResponse«List«RecordDTO»»","$ref":"#/definitions/ApiResponse«List«RecordDTO»»"}},"600":{"description":"Error (Always status code 200)","schema":{"originalRef":"ApiErrorResponse","$ref":"#/definitions/ApiErrorResponse"}}},"security":[{"Bearer":["global"]}],"deprecated":false}},"/api/v1/records/{id}":{"get":{"tags":["Records"],"summary":"Get time record by id","operationId":"findByIdUsingGET_2","produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"originalRef":"ApiResponse«List«RecordDTO»»","$ref":"#/definitions/ApiResponse«List«RecordDTO»»"}},"600":{"description":"Error (Always status code 200)","schema":{"originalRef":"ApiErrorResponse","$ref":"#/definitions/ApiErrorResponse"}}},"security":[{"Bearer":["global"]}],"deprecated":false}},"/api/v1/roles":{"get":{"tags":["User roles"],"summary":"Get all user roles","operationId":"findByTeamIdUsingGET_2","produces":["*/*","application/json"],"parameters":[{"name":"limit","in":"query","description":"1-10000","required":true,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"0-until page end","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"originalRef":"ApiResponse«List«RoleDTO»»","$ref":"#/definitions/ApiResponse«List«RoleDTO»»"}},"600":{"description":"Error (Always status code 200)","schema":{"originalRef":"ApiErrorResponse","$ref":"#/definitions/ApiErrorResponse"}}},"security":[{"Bearer":["global"]}],"deprecated":false}},"/api/v1/roles/{id}":{"get":{"tags":["User roles"],"summary":"Get a user role by id","operationId":"findByIdUsingGET_3","produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"originalRef":"ApiResponse«List«RoleDTO»»","$ref":"#/definitions/ApiResponse«List«RoleDTO»»"}},"600":{"description":"Error (Always status code 200)","schema":{"originalRef":"ApiErrorResponse","$ref":"#/definitions/ApiErrorResponse"}}},"security":[{"Bearer":["global"]}],"deprecated":false}},"/api/v1/teams":{"get":{"tags":["Teams"],"summary":"Get team info","operationId":"findByIdUsingGET_4","produces":["*/*","application/json"],"responses":{"200":{"description":"OK","schema":{"originalRef":"ApiResponse«List«TeamDTO»»","$ref":"#/definitions/ApiResponse«List«TeamDTO»»"}},"600":{"description":"Error (Always status code 200)","schema":{"originalRef":"ApiErrorResponse","$ref":"#/definitions/ApiErrorResponse"}}},"security":[{"Bearer":["global"]}],"deprecated":false}},"/api/v1/users":{"get":{"tags":["Users"],"summary":"Get users","operationId":"findByTeamIdUsingGET_3","produces":["*/*","application/json"],"parameters":[{"name":"limit","in":"query","description":"1-10000","required":true,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"0-until page end","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"originalRef":"ApiResponse«List«UserDTO»»","$ref":"#/definitions/ApiResponse«List«UserDTO»»"}},"600":{"description":"Error (Always status code 200)","schema":{"originalRef":"ApiErrorResponse","$ref":"#/definitions/ApiErrorResponse"}}},"security":[{"Bearer":["global"]}],"deprecated":false}},"/api/v1/users/{id}":{"get":{"tags":["Users"],"summary":"Get a user by id","operationId":"findByIdUsingGET_5","produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"originalRef":"ApiResponse«List«UserDTO»»","$ref":"#/definitions/ApiResponse«List«UserDTO»»"}},"600":{"description":"Error (Always status code 200)","schema":{"originalRef":"ApiErrorResponse","$ref":"#/definitions/ApiErrorResponse"}}},"security":[{"Bearer":["global"]}],"deprecated":false}}},"securityDefinitions":{"Bearer":{"type":"apiKey","name":"Authorization","in":"header"}},"definitions":{"ApiErrorResponse":{"type":"object","required":["message"],"properties":{"ok":{"type":"boolean","example":false},"message":{"type":"string"},"timestamp":{"type":"string","format":"date-time"}},"title":"ApiErrorResponse"},"ApiResponse«List«Group»»":{"type":"object","required":["ok","result"],"properties":{"ok":{"type":"boolean"},"result":{"type":"array","items":{"originalRef":"Group","$ref":"#/definitions/Group"}}},"title":"ApiResponse«List«Group»»"},"ApiResponse«List«ProjectDTO»»":{"type":"object","required":["ok","result"],"properties":{"ok":{"type":"boolean"},"result":{"type":"array","items":{"originalRef":"ProjectDTO","$ref":"#/definitions/ProjectDTO"}}},"title":"ApiResponse«List«ProjectDTO»»"},"ApiResponse«List«RecordDTO»»":{"type":"object","required":["ok","result"],"properties":{"ok":{"type":"boolean"},"result":{"type":"array","items":{"originalRef":"RecordDTO","$ref":"#/definitions/RecordDTO"}}},"title":"ApiResponse«List«RecordDTO»»"},"ApiResponse«List«RoleDTO»»":{"type":"object","required":["ok","result"],"properties":{"ok":{"type":"boolean"},"result":{"type":"array","items":{"originalRef":"RoleDTO","$ref":"#/definitions/RoleDTO"}}},"title":"ApiResponse«List«RoleDTO»»"},"ApiResponse«List«TeamDTO»»":{"type":"object","required":["ok","result"],"properties":{"ok":{"type":"boolean"},"result":{"type":"array","items":{"originalRef":"TeamDTO","$ref":"#/definitions/TeamDTO"}}},"title":"ApiResponse«List«TeamDTO»»"},"ApiResponse«List«UserDTO»»":{"type":"object","required":["ok","result"],"properties":{"ok":{"type":"boolean"},"result":{"type":"array","items":{"originalRef":"UserDTO","$ref":"#/definitions/UserDTO"}}},"title":"ApiResponse«List«UserDTO»»"},"Archived":{"type":"object","required":["date","user"],"properties":{"date":{"type":"string","format":"date-time"},"user":{"type":"string"}},"title":"Archived"},"Edited":{"type":"object","required":["author","date"],"properties":{"author":{"type":"string"},"date":{"type":"string","format":"date-time"}},"title":"Edited"},"Group":{"type":"object","required":["id","name","team_id"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"team_id":{"type":"string"}},"title":"Group"},"Icon":{"type":"object","required":["image_102","image_132","image_34","image_44","image_68","image_88"],"properties":{"image_102":{"type":"string"},"image_132":{"type":"string"},"image_230":{"type":"string"},"image_34":{"type":"string"},"image_44":{"type":"string"},"image_68":{"type":"string"},"image_88":{"type":"string"},"image_original":{"type":"string"}},"title":"Icon"},"ProjectDTO":{"type":"object","required":["author","id","project_name","pto","team_id"],"properties":{"archived":{"originalRef":"Archived","$ref":"#/definitions/Archived"},"assigned_groups":{"type":"array","items":{"type":"string"}},"author":{"type":"string"},"client":{"type":"string"},"create_date":{"type":"string","format":"date-time"},"created_at":{"type":"string","format":"date-time"},"custom_ref":{"type":"string"},"id":{"type":"string"},"project_name":{"type":"string"},"pto":{"originalRef":"Pto","$ref":"#/definitions/Pto"},"team_id":{"type":"string"},"type":{"type":"string"}},"title":"ProjectDTO"},"Pto":{"type":"object","required":["status"],"properties":{"status":{"type":"boolean"}},"title":"Pto"},"RecordDTO":{"type":"object","required":["created_at","date","hours","id","project_id","project_name","team_id","user_id"],"properties":{"created_at":{"type":"string","format":"date-time"},"date":{"type":"string","format":"date-time"},"edited":{"originalRef":"Edited","$ref":"#/definitions/Edited"},"hours":{"type":"number","format":"double"},"id":{"type":"string"},"info":{"type":"string"},"project_id":{"type":"string"},"project_name":{"type":"string"},"team_id":{"type":"string"},"user_id":{"type":"string"}},"title":"RecordDTO"},"RoleDTO":{"type":"object","required":["id","name","team_id"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"team_id":{"type":"string"}},"title":"RoleDTO"},"Subscription":{"type":"object","required":["status"],"properties":{"active_until":{"type":"string","format":"date-time"},"number_of_users":{"type":"integer","format":"int32"},"status":{"type":"string"},"subscriber_id":{"type":"string"}},"title":"Subscription"},"TeamDTO":{"type":"object","required":["activated_by","domain","icon","id","platform_id","status","subscription"],"properties":{"activated_by":{"type":"string"},"bot_token":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"domain":{"type":"string"},"icon":{"originalRef":"Icon","$ref":"#/definitions/Icon"},"id":{"type":"string"},"platform_id":{"type":"string"},"status":{"type":"string"},"subscription":{"originalRef":"Subscription","$ref":"#/definitions/Subscription"}},"title":"TeamDTO"},"UserDTO":{"type":"object","required":["deleted","id","is_admin","is_checkin_excluded","is_nikabot_admin","name","presence","team_id","tz_offset","user_id"],"properties":{"create_date":{"type":"string","format":"date-time"},"created_at":{"type":"string","format":"date-time"},"custom_ref":{"type":"string"},"deleted":{"type":"boolean"},"groups":{"type":"array","items":{"type":"string"}},"id":{"type":"string"},"is_admin":{"type":"boolean"},"is_checkin_excluded":{"type":"boolean"},"is_nikabot_admin":{"type":"boolean"},"is_restricted":{"type":"boolean"},"is_ultra_restricted":{"type":"boolean"},"last_eom_reminder":{"type":"string","format":"date-time"},"last_feedback":{"type":"string","format":"date-time"},"name":{"type":"string"},"presence":{"type":"string"},"role":{"type":"string"},"team_id":{"type":"string"},"tz":{"type":"string"},"tz_label":{"type":"string"},"tz_offset":{"type":"integer","format":"int32"},"updated_at":{"type":"string","format":"date-time"},"user_id":{"type":"string"}},"title":"UserDTO"}}}'  # noqa


@pytest.fixture(autouse=True)
def setup(requests_mock):
    requests_mock.get(
        "https://api.nikabot.com/v2/api-docs?group=public", json=json.loads(SWAGGER_DEFINITION),
    )


class TestDiscover:
    def test_should_return_all_catalog_entries(self):
        catalog = discover()
        assert len(catalog.streams) == 6

    def test_should_return_users_catalog(self):
        catalog = discover()
        catalog_entry = next(e for e in catalog.streams if e.tap_stream_id == "users")
        assert catalog_entry.stream == "users"
        assert catalog_entry.schema.properties["is_admin"].type == "boolean"

    def test_should_return_roles_catalog(self):
        catalog = discover()
        catalog_entry = next(e for e in catalog.streams if e.tap_stream_id == "roles")
        assert catalog_entry.stream == "roles"
        assert catalog_entry.schema.properties["team_id"].type == "string"

    def test_should_return_groups_catalog(self):
        catalog = discover()
        catalog_entry = next(e for e in catalog.streams if e.tap_stream_id == "groups")
        assert catalog_entry.stream == "groups"
        assert catalog_entry.schema.properties["team_id"].type == "string"

    def test_should_return_teams_catalog(self):
        catalog = discover()
        catalog_entry = next(e for e in catalog.streams if e.tap_stream_id == "teams")
        assert catalog_entry.stream == "teams"
        assert catalog_entry.schema.properties["platform_id"].type == "string"

    def test_should_return_projects_catalog(self):
        catalog = discover()
        catalog_entry = next(e for e in catalog.streams if e.tap_stream_id == "projects")
        assert catalog_entry.stream == "projects"
        assert catalog_entry.schema.properties["project_name"].type == "string"

    def test_should_return_records_catalog(self):
        catalog = discover()
        catalog_entry = next(e for e in catalog.streams if e.tap_stream_id == "records")
        assert catalog_entry.stream == "records"
        assert catalog_entry.schema.properties["hours"] is not None
        assert catalog_entry.schema.properties["edited"].properties["date"].type == "string"
